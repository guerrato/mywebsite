version: 2
jobs:
  build:
    docker:
      - image: node:latest
    working_directory: ~/repo
    branches:
      only:
        - dev
        - staging
        - master
        - features/*
    steps:
      - checkout
      - run:
          name: Installing NPM Dependencies
          command: npm install

#       # Create Postgres users and database
#       # Note the YAML heredoc '|' for nicer formatting
#       - run: |
#           sudo -u root createuser -h localhost --superuser ubuntu &&
#           sudo createdb -h localhost test_db

#       - restore_cache:
#           keys:
#             - v1-my-project-{{ checksum "project.clj" }}
#             - v1-my-project-

#       - run:
#           environment:
#             SSH_TARGET: "localhost"
#             TEST_ENV: "linux"
#           command: |
#             set -xu
#             mkdir -p ${TEST_REPORTS}
#             run-tests.sh
#             cp out/tests/*.xml ${TEST_REPORTS}

#       - run: |
#           set -xu
#           mkdir -p /tmp/artifacts
#           create_jars.sh ${CIRCLE_BUILD_NUM}
#           cp *.jar /tmp/artifacts

#       - save_cache:
#           key: v1-my-project-{{ checksum "project.clj" }}
#           paths:
#             - ~/.m2

#       # Save artifacts
#       - store_artifacts:
#           path: /tmp/artifacts
#           destination: build

#       # Upload test results
#       - store_test_results:
#           path: /tmp/test-reports

#   deploy-stage:
#     docker:
#       - image: ubuntu:14.04
#     working_directory: /tmp/my-project
#     steps:
#       - run:
#           name: Deploy if tests pass and branch is Staging
#           command: ansible-playbook site.yml -i staging

#   deploy-prod:
#     docker:
#       - image: ubuntu:14.04
#     working_directory: /tmp/my-project
#     steps:
#       - run:
#           name: Deploy if tests pass and branch is Master
#           command: ansible-playbook site.yml -i production

# workflows:
#   version: 2
#   build-deploy:
#     jobs:
#       - build
#       - deploy-stage:
#           requires:
#             - build
#           filters:
#             branches:
#               only: staging
#       - deploy-prod:
#           requires:
#             - build
#           filters:
#             branches:
#               only: master